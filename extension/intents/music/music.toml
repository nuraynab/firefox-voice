[music.focus]
description = "Focus the tab of a specific or auto-detected service, maybe opening a tab if none is already open"
match = """
  (open | show | focus) (my | the |) video (for me |) [service=youtube]
  (open | show | focus) [service:musicServiceName] (for me|)
  (open | show | focus) music
"""

[[music.focus.example]]
phrase = "Open music"

[[music.focus.example]]
phrase = "show my video"
test = true
expectParameters = {service = "youtube"}

[[music.focus.example]]
phrase = "open spotify for me"
test = true
expectSlots = {service = "spotify"}

[music.move]
description = "Go to the next or previous song on a service"
match = """
  (play |) next video               [direction=next] [service=youtube]
  skip video                        [direction=next] [service=youtube]
  (play |) previous video           [direction=previous] [service=youtube]
  play next (song | track |)        [direction=next]
  next (song | track)             [direction=next]
  play previous (song | track |)    [direction=previous]
  previous (song | track)         [direction=previous]
  (skip | forward) (song | track |) [direction=next]
"""

[[music.move.example]]
phrase = "next track"

[[music.move.example]]
phrase = "previous song"

[[music.move.example]]
phrase = "play next video"
test = true
expectParameters = {direction = "next", service = "youtube"}

[[music.move.example]]
phrase = "skip"
test = true
expectParameters = {direction = "next"}

[[music.move.example]]
phrase = "previous track"
test = true
expectParameters = {direction = "previous"}

[music.pause]
description = "Pause all supported services (regardless of tab or window)"
match = """
  (stop | pause) (play | playing |) video [service=youtube]
  pause [service:musicServiceName]
  pause (play | playing |) (music |) 
  stop (play | playing |) (music |)
"""

[[music.pause.example]]
phrase = "Pause music"

[[music.pause.example]]
phrase = "pause spotify"
test = true
expectParameters = {}
expectSlots = {service = "spotify"}

[[music.pause.example]]
phrase = "stop"
test = true

[[music.pause.example]]
phrase = "stop video"
test = true
expectParameters = {service = "youtube"}

[[music.pause.example]]
phrase = "stop playing video"
test = true
expectParameters = {service = "youtube"}

[[music.pause.example]]
phrase = "stop playing music"
test = true

[music.play]
description = "Play music on an explicit service, a default service, or the service in the active tab"
match = """
  play [query] (on | in) [service:musicServiceName]
  play video{s} [query] [service=youtube]
  play [query] video{s} [service=youtube]
  play [query]
  (do a |) (search | query | look up| look | look up | lookup) (on | in |) (my |) [service:musicServiceName] (for | for the |) [query]
  (do a |) (search | query ) my [service:musicServiceName] (for | for the |) [query]
  (do a |) (search | query ) (on |) [service:musicServiceName] (for | for the) [query]
  (do a |) (search | query | find | find me | look up | lookup | look on | look for) (my | on | for | in |) (the |) [query] (on | in) [service:musicServiceName]
"""

[[music.play.example]]
phrase = "Play Green Day"

[[music.play.example]]
phrase = "play query on spotify"
test = true
expectParameters = {}
expectSlots = {service = "spotify", query = "query"}

[[music.play.example]]
phrase = "play video query"
test = true
expectParameters = {service = "youtube"}
expectSlots = {query = "query"}

[[music.play.example]]
phrase = "do a search on spotify for query"
test = true
expectParameters = {}
expectSlots = {service = "spotify", query = "query"}

[music.unpause]
description = "Unpause one service, the current tab, or the detected service"
match = """
  (unpause | continue | play | resume) video [service=youtube]
  (unpause | continue | play | resume) [service:musicServiceName]
  (unpause | continue | play | resume) (music |)
"""

[[music.unpause.example]]
phrase = "Unpause"

[[music.unpause.example]]
phrase = "continue music"

[[music.unpause.example]]
phrase = "play music"

[[music.unpause.example]]
phrase = "play spotify"
test = true

[music.showTitle]
description = "Show the title of the tab that's currently playing a video/audio"
match = """
  (what | what's | ) ( tab | song | music | title | ) ( is | ) playing
"""

[[music.showTitle.example]]
phrase = "What is playing"

[[music.showTitle.example]]
phrase = "What's playing?"
test = true
